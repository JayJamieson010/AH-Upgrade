Code to be added for sending functionality
    wb= Workbook() 
                ws = wb.active()
                ws.title = "UpdatedFileToBeSentSheet"
                   
                ws.append([name, surname, output_path, email, subject])
                name: For use of email body
                surname: for the email body
                output attaches generated file on email
                email used as email
                subject: Given when the user inters it 

def send_saved_docs():
        global selected_excel_path  # Reference the global variable
        if not selected_excel_path:
            QMessageBox.warning(file_automation_window, "Error", "Please select an Excel file before proceeding.")
            return

        try:
            # Read the updated Excel file
            data = pd.read_excel(selected_excel_path)

            # Check if necessary columns exist
            required_columns = ["EMAIL", "Generated File Path", "NAME", "SURNAME"]
            for col in required_columns:
                if col not in data.columns:
                    QMessageBox.warning(
                        file_automation_window,
                        "Error",
                        f"The Excel file must contain the following columns: {', '.join(required_columns)}."
                    )
                    return

            outlook = win32.Dispatch("Outlook.Application")

            for idx, row in data.iterrows():
                email = row.get("EMAIL", None)
                file_path = row.get("Generated File Path", None)

                if not email or pd.isna(email) or not file_path or pd.isna(file_path):
                    print(f"Row {idx + 1}: Missing email or file path, skipping.")
                    continue

                # Create an email
                mail = outlook.CreateItem(0)
                mail.To = email
                mail.Subject = f"Generated Document for {row['NAME']} {row['SURNAME']}"
                mail.Body = "Please find the attached document."

                # Attach the file
                mail.Attachments.Add(file_path)

                mail.Send()
                print(f"Row {idx + 1}: Email sent to {email} with attachment {file_path}")

            QMessageBox.information(file_automation_window, "Success", "All documents have been sent successfully.")

        except Exception as e:
            QMessageBox.critical(file_automation_window, "Error", f"An error occurred: {str(e)}")
